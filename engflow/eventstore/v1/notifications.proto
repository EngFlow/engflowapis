// Copyright 2022 EngFlow, Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package engflow.eventstore.v1;

import "engflow/auth/auth_context.proto";

option go_package = "github.com/EngFlow/engflowapis-go/engflow/eventstore/v1;eventstorev1";

option java_multiple_files = true;
option java_outer_classname = "NotificationsProtos";
option java_package = "com.engflow.eventstore.v1.proto";

// Payload type for build lifecycle event notifications.
message BuildLifecycleEventNotification {
  reserved 1;
  reserved "instance_name";

  // The ID of the build.
  //
  // See `engflow.eventstore.v1.GetBuildRequest` for the syntax of this field.
  string build_id = 2;

  // The auth context for this build.
  engflow.auth.AuthContext auth_context = 3;

  // User-defined keywords for this notification.
  //
  // These keywords are provided by the client running the build/invocation, and
  // are typically only present for `BuildStarted` and `InvocationStated`
  // notifications.
  repeated string keywords = 4;

  // Notification indicating that a new build started.
  message BuildStarted {
    // This is empty for now.
  }

  // Notification indicating that a build ended.
  //
  // TODO(yannic): Should we include the invocations that were part of this
  // build in this notification?
  message BuildFinished {
    // TODO(yannic): Add overall status of the build.
  }

  // Notification indicating that a new invocation started as part of this
  // build.
  message InvocationStarted {
    // The ID of the invocation. This is always a valid UUID.
    string invocation_id = 1;
  }

  // Notification indicating that an invocation from this build ended.
  message InvocationFinished {
    // The ID of the invocation. This is always a valid UUID.
    string invocation_id = 1;

    // TODO(yannic): Add status of invocation.
  }

  oneof kind {
    BuildStarted build_started = 100;
    BuildFinished build_finished = 101;
    InvocationStarted invocation_started = 102;
    InvocationFinished invocation_finished = 103;
  }
}
