// Copyright 2023 EngFlow, Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package engflow.resultstore.v1;

import "google/api/field_behavior.proto";
import "engflow/api/options.proto";
import "engflow/resultstore/v1/invocation.proto";

option java_multiple_files = true;
option java_outer_classname = "ResultStoreProtos";
option java_package = "com.engflow.resultstore.v1.proto";

// This is the interface used to retrieve build results from the `ResultStore`
// service.
service ResultStore {
  option (engflow.api.engflow_service) = {
    launch_stage: EARLY_ACCESS

    availability {
      product: "platform"

      since { major: 2 minor: 37 patch: 0 }
    }
  };

  // Retrieves a the result of the invocation with the provided ID.
  //
  // An error will be reported in the following cases:
  //   * `INVALID_ARGUMENT`: The request is invalid (e.g., did not specify an
  //                         invocation ID).
  //   * `NOT_FOUND`: An invocation with the specified ID does not exist.
  rpc GetInvocation(GetInvocationRequest) returns (stream StreamedInvocation) {
    option (engflow.api.engflow_method) = {
      launch_stage: EARLY_ACCESS

      availability {
        product: "platform"

        since { major: 2 minor: 37 patch: 0 }
      }
    };
  }
}

// A request message for `ResultStore/GetInvocation`.
message GetInvocationRequest {
  reserved 1;
  reserved "instance_name";

  // The ID of the invocation to retrieve.
  //
  // Must be an RFC 4122-compliant random UUID.
  string invocation_id = 2 [(google.api.field_behavior) = REQUIRED];
}

message StreamedInvocation {
  // Indicates that this is the last update.
  bool is_last = 1;

  Invocation invocation = 2 [(google.api.field_behavior) = REQUIRED];
}
