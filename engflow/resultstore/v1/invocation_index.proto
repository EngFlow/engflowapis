// Copyright 2023 EngFlow, Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package engflow.resultstore.v1;

import "engflow/resultstore/v1/invocation_entry.proto";
import "engflow/resultstore/v1/invocation_query.proto";

option java_multiple_files = true;
option java_outer_classname = "InvocationIndexProtos";
option java_package = "com.engflow.resultstore.v1.proto";

// Interface to retrieve invocation entries from the invocation index.
service InvocationIndex {
  // Returns a stream invocation entries that are results of the search
  // performed with the given query.
  rpc SearchInvocations(SearchInvocationsRequest)
      returns (SearchInvocationsResponse) {}
}

message SearchInvocationsRequest {
  // The query used to filter and sort the requested invocation entries.
  InvocationQuery query = 1;

  // The first index (inclusive) to be returned in the result set.
  int32 start_index = 2;

  // The last index (inclusive) to be returned in the result set.
  // This value must be greater than or equal to start_index.
  int32 end_index = 3;

  // A (optional) continuation token used when paginating results of a previous
  // query.
  string continuation_token = 4;
}

message SearchInvocationsResponse {
  // The set of returned invocation index entries that match the given search
  // request.
  repeated InvocationEntry entry = 1;

  // The index within the entire set of search results of the first element of
  // the returned entries.
  int32 start_index = 2;

  // A continuation token that can be used to keep pages consistent when
  // paginating many results of a query.
  string continuation_token = 3;
}
