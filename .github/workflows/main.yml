name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - "main"
      - "yannic-tag-main"

env:
  BAZELISK_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  OPAL_RPC_CREDENTIALS: ${{ secrets.OPAL_RPC_CREDENTIALS }}

jobs:
  # check:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Build
  #       run: bazel build //...

  publish:
    runs-on: ubuntu-latest
    # needs:
    #   - "check"
    if: github.ref == 'refs/heads/yannic-tag-main'

    steps:
      - uses: actions/checkout@v4

      - name: Create tag
        id: "tag"
        env:
          GIT_AUTHOR_NAME: "EngFlow"
          GIT_AUTHOR_EMAIL: "noreply@engflow.com"
          GIT_COMMITTER_NAME: "EngFlow"
          GIT_COMMITTER_EMAIL: "noreply@engflow.com"
        run: |
          VERSION="$(date -u '+%Y.%m.%d-%H.%M.%S')"
          echo "version=${VERSION}" >> "${GITHUB_OUTPUT}"

          # 1. Download `buildozer`
          curl -o "${RUNNER_TEMP}/buildozer" -L "https://github.com/bazelbuild/buildtools/releases/download/v7.3.1/buildozer-linux-amd64"
          chmod +x "${RUNNER_TEMP}/buildozer"

          # 2. Update `MODULE.bazel` and commit.
          "${RUNNER_TEMP}/buildozer" "set version ${VERSION}" "//MODULE.bazel:engflowapis"
          git add "MODULE.bazel"
          git commit -m "Release ${VERSION}"

          # 3. Push release tag.
          git tag "${VERSION}" "HEAD"
          git push origin "${VERSION}"

          # 4. Create release tarball
          git archive -o "${RUNNER_TEMP}/archive.tar.gz" "${VERSION}"

      - name: Create GitHub Release
        id: "create-release"
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.version }}
          release_name: Release ${{ steps.tag.outputs.version }}
          body: |
            # EngFlow APIs ${{ steps.tag.outputs.version }}

            To use this module, please add the following to `MODULE.bazel`:

            ```starlark
            bazel_dep(name = "engflowapis", version = "${{ steps.tag.outputs.version }}")
            ```
          prerelease: true

      - name: Upload Tarball
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ${{ runner.temp }}/archive.tar.gz
          asset_name: module.tar.gz
          asset_content_type: "application/gzip"
